esphome:
  name: lilygo
  platformio_options:
    # Unless noted otherwise, based on https://github.com/Xinyuan-LilyGO/LilyGo-EPD47/blob/1eb6119fc31fcff7a6bafecb09f4225313859fc5/examples/demo/platformio.ini#L37
    upload_speed: 921600
    monitor_speed: 115200
    board_build.mcu: esp32s3
    board_build.f_cpu: 240000000L
    board_build.arduino.memory_type: qspi_opi
    board_build.flash_size: 16MB
    board_build.flash_mode: qio
    board_build.flash_type: qspi
    board_build.psram_type: opi
    board_build.memory_type: qspi_opi
    board_build.boot_freq: 80m
    platform_packages:
      - "toolchain-riscv32-esp @8.4.0+2021r2-patch5"
    build_flags:  # the first three defines are required for the screen library to function.
      - "-DBOARD_HAS_PSRAM"
      - "-DARDUINO_RUNNING_CORE=0"  # TODO: this conflicts with the value from platformio's idedata, spewing a lot of warnings during the build.
      - "-DARDUINO_EVENT_RUNNING_CORE=0"  # and this too
      # In addition to lilygo's settings:
      # To enable reading logs over USB until `hardware_uart: USB_CDC` support
      # is added to `logger:`, as detailed in <https://github.com/esphome/feature-requests/issues/1906>:
      - "-DARDUINO_USB_MODE=1"
      - "-DARDUINO_USB_CDC_ON_BOOT=1"

esp32:
  variant: esp32s3
  board: esp32-s3-devkitc-1

  framework:
    type: arduino
    # Just like in <https://community.home-assistant.io/t/enable-usb-cdc-to-log-hello-world-to-esp32-s3-dev-board-for-esphome/463164/10>
    # I had problems with newer versions; the following combination happens to work, so using it for now.
    version: 2.0.3
    platform_version: 5.1.1

logger:
  level: VERBOSE
  # hardware_uart: USB_CDC  # see note about <https://github.com/esphome/feature-requests/issues/1906> above


# Enable Home Assistant API
api:
  encryption:
    key: "your_enc_key"

ota:
  password: "your_enc_password"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "E-Paper Fallback Hotspot"
    password: "esphome123"

binary_sensor:
  - platform: gpio
    pin: 
      number: GPIO21 #was GPIO39 on the previous board
      inverted: true
    name: "Button 1"
    on_press:
      - logger.log: PhysButton Pressed

external_components:
  source:
    type: local
    path: components/
  components: ["t547", "lilygo_t5_47_battery"] # battery added from fork by kaeltis

captive_portal:
spi:
  clk_pin: GPIO3
  mosi_pin: GPIO2

font:
  - file: "fonts/OCRAEXT.ttf"
    id: fontocra_300
    size: 300
  - file: "fonts/OCRAEXT.ttf"
    id: fontocra_200
    size: 200
  - file: "fonts/OCRAEXT.ttf"
    id: fontocra_24
    size: 24

time:
  - platform: homeassistant
    id: local_time
    timezone: Europe/London

display:
  - platform: t547
    # rotation: 180
    update_interval: 60s
    lambda: |-
      it.strftime(20, 0, id(fontocra_300), TextAlign::TOP_LEFT, "%H:%M", id(local_time).now());
      it.line(0, 50, 960, 50);
      it.line(0, 270, 960, 270);
      it.strftime(0, 280, id(fontocra_200), TextAlign::TOP_LEFT, "%d-%m-%y", id(local_time).now());
      it.line(0, 500, 960, 500);
      it.printf(60, 510, id(fontocra_24), TextAlign::TOP_LEFT, "Battery: %.1f%%", id(t547_battery_percentage).state);
      it.printf(320, 510, id(fontocra_24), TextAlign::TOP_LEFT, "Voltage: %.2fV", id(t547_battery_voltage).state);

sensor:
  - platform: homeassistant
    id: t547_battery_voltage
    entity_id: sensor.battery_voltage

  - platform: lilygo_t5_47_battery
    id: t547_voltage
    voltage:
      name: "Battery Voltage"

  - platform: template
    name: "t547 Battery Percentage"
    id: t547_battery_percentage
    lambda: |-
      // tweak values in mapping for calibration
      // 4.1 = max voltage
      // 3.3 = min voltage
      float y = (id(t547_voltage).voltage->state - 3.3) * 100.0 / (4.1 - 3.3);
      if (y < 100.0) { return y; } else { return 100.0; };
